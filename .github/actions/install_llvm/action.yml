name: Build and install LLVM on Windows

inputs:
  repository:
    description: 'Repository name with owner. Defaults to the official LLVM repository.'
    default: 'llvm/llvm-project'
  ref:
    description: 'The llvm-project branch, tag or SHA to checkout.'
    default: 'release/20.x'
  path:
    description: 'Relative path under $GITHUB_WORKSPACE to place the repository'
    default: './llvm-project'

runs:
  using: "composite"
  steps:
    - name: Install Ninja (Windows)
      run: choco install -y --no-progress ninja
      shell: pwsh

    - name: Checkout LLVM project (Windows)
      uses: actions/checkout@v3.5.0
      with:
        repository: ${{inputs.repository}}
        ref: ${{inputs.ref}}
        path: ${{inputs.path}}

    # Required to find cl.exe
    - name: Setup devcmd (Windows)
      uses: ilammy/msvc-dev-cmd@v1.12.1
      with:
        arch: x86

    - name: Setup python
      uses: actions/setup-python@v4
      id: cpython
      with:
        python-version: '3.10'
        architecture : x86

    - name: Build and install LLVM project (Windows)
      env:
        # CMake build type
        BUILD_TYPE: Release
      run: |
        cd "${{github.workspace}}\llvm-project"
        cmake -G Ninja -B ".\build" -S ".\llvm" -DPython3_EXECUTABLE=${{ steps.cpython.outputs.python-path }} -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DLLVM_ENABLE_PROJECTS="clang;lldb" -DLLVM_TARGETS_TO_BUILD=host -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLDB_INCLUDE_TESTS=OFF
        cmake --build ".\build" --config ${{env.BUILD_TYPE}}
        cmake --install ".\build" --config ${{env.BUILD_TYPE}} --prefix "./inst"
      shell: pwsh

    # Use default 90-day retention period
    - uses: actions/upload-artifact@v4
      with:
        name: llvm-inst
        path: "./llvm-project/inst"
